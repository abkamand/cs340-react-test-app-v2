{"ast":null,"code":"import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    const eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'button',\n    bsPrefix,\n    className,\n    onClick,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, eventKey !== activeEventKey && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","map":{"version":3,"names":["React","useContext","classNames","AccordionContext","AccordionItemContext","useBootstrapPrefix","jsx","_jsx","useAccordionButton","eventKey","onClick","activeEventKey","onSelect","e","eventKeyPassed","AccordionButton","forwardRef","ref","as","Component","bsPrefix","className","props","accordionOnClick","type","displayName"],"sources":["C:/Users/Andrew/Desktop/cs340-react-test-app-v2/node_modules/react-bootstrap/esm/AccordionButton.js"],"sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    const eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, eventKey !== activeEventKey && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCC,OAAtC,EAA+C;EACpD,MAAM;IACJC,cADI;IAEJC;EAFI,IAGFX,UAAU,CAACE,gBAAD,CAHd;EAIA,OAAOU,CAAC,IAAI;IACV;AACJ;AACA;AACA;IACI,MAAMC,cAAc,GAAGL,QAAQ,KAAKE,cAAb,GAA8B,IAA9B,GAAqCF,QAA5D;IACA,IAAIG,QAAJ,EAAcA,QAAQ,CAACE,cAAD,EAAiBD,CAAjB,CAAR;IACd,IAAIH,OAAJ,EAAaA,OAAO,CAACG,CAAD,CAAP;EACd,CARD;AASD;AACD,MAAME,eAAe,GAAG,aAAaf,KAAK,CAACgB,UAAN,CAAiB,OAOnDC,GAPmD,KAO3C;EAAA,IAP4C;IACrD;IACAC,EAAE,EAAEC,SAAS,GAAG,QAFqC;IAGrDC,QAHqD;IAIrDC,SAJqD;IAKrDX,OALqD;IAMrD,GAAGY;EANkD,CAO5C;EACTF,QAAQ,GAAGf,kBAAkB,CAACe,QAAD,EAAW,kBAAX,CAA7B;EACA,MAAM;IACJX;EADI,IAEFR,UAAU,CAACG,oBAAD,CAFd;EAGA,MAAMmB,gBAAgB,GAAGf,kBAAkB,CAACC,QAAD,EAAWC,OAAX,CAA3C;EACA,MAAM;IACJC;EADI,IAEFV,UAAU,CAACE,gBAAD,CAFd;;EAIA,IAAIgB,SAAS,KAAK,QAAlB,EAA4B;IAC1BG,KAAK,CAACE,IAAN,GAAa,QAAb;EACD;;EAED,OAAO,aAAajB,IAAI,CAACY,SAAD,EAAY;IAClCF,GAAG,EAAEA,GAD6B;IAElCP,OAAO,EAAEa,gBAFyB;IAGlC,GAAGD,KAH+B;IAIlC,iBAAiBb,QAAQ,KAAKE,cAJI;IAKlCU,SAAS,EAAEnB,UAAU,CAACmB,SAAD,EAAYD,QAAZ,EAAsBX,QAAQ,KAAKE,cAAb,IAA+B,WAArD;EALa,CAAZ,CAAxB;AAOD,CA5BoC,CAArC;AA6BAI,eAAe,CAACU,WAAhB,GAA8B,iBAA9B;AACA,eAAeV,eAAf"},"metadata":{},"sourceType":"module"}