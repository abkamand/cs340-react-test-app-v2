{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\Desktop\\\\cs340-react-test-app-v2\\\\src\\\\Components\\\\edit-person.component.jsx\",\n    _s = $RefreshSig$();\n\n// Reference: https://www.geeksforgeeks.org/how-to-build-a-basic-crud-app-with-node-js-and-reactjs/\n// Utilized code template from this setup guide, all credit to geeksforgeeks.com (allows use of tutorial/setup code with citation)\n// EditPerson Component for update Person data\n// Import Modules\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PersonForm from \"./PersonForm\"; // EditPerson Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPerson = props => {\n  _s();\n\n  const [formValues, setFormValues] = useState({\n    name: \"\",\n    email: \"\",\n    rollno: \"\"\n  }); //onSubmit handler\n\n  const onSubmit = personObject => {\n    axios.put(\"http://localhost:4000/bsg_people/update-person/\" + props.match.params.id, personObject).then(res => {\n      if (res.status === 200) {\n        alert(\"Person successfully updated\");\n        props.history.push(\"/person-list\");\n      } else Promise.reject();\n    }).catch(err => alert(\"Something went wrong\"));\n  }; // Load data from server and reinitialize person form\n\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/bsg_people/update-person/\" + props.match.params.id).then(res => {\n      const {\n        fname,\n        lname,\n        homeworld,\n        age\n      } = res.data;\n      setFormValues({\n        fname,\n        lname,\n        homeworld,\n        age\n      });\n    }).catch(err => console.log(err));\n  }, [props.match.params.id]); // Return person form\n\n  return /*#__PURE__*/_jsxDEV(PersonForm, {\n    initialValues: formValues,\n    onSubmit: onSubmit,\n    enableReinitialize: true,\n    children: \"Update Person\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}; // Export EditPerson Component\n\n\n_s(EditPerson, \"dwMZE1kb1zaOzDBEtcSqtPY/r3k=\");\n\n_c = EditPerson;\nexport default EditPerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPerson\");","map":{"version":3,"names":["React","useState","useEffect","axios","PersonForm","EditPerson","props","formValues","setFormValues","name","email","rollno","onSubmit","personObject","put","match","params","id","then","res","status","alert","history","push","Promise","reject","catch","err","get","fname","lname","homeworld","age","data","console","log"],"sources":["C:/Users/Andrew/Desktop/cs340-react-test-app-v2/src/Components/edit-person.component.jsx"],"sourcesContent":["// Reference: https://www.geeksforgeeks.org/how-to-build-a-basic-crud-app-with-node-js-and-reactjs/\r\n// Utilized code template from this setup guide, all credit to geeksforgeeks.com (allows use of tutorial/setup code with citation)\r\n\r\n// EditPerson Component for update Person data\r\n\r\n// Import Modules\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport PersonForm from \"./PersonForm\";\r\n\r\n// EditPerson Component\r\nconst EditPerson = (props) => {\r\n    const [formValues, setFormValues] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        rollno: \"\",\r\n    });\r\n\r\n    //onSubmit handler\r\n    const onSubmit = (personObject) => {\r\n        axios\r\n            .put(\r\n                \"http://localhost:4000/bsg_people/update-person/\" +\r\n                props.match.params.id,\r\n                personObject\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    alert(\"Person successfully updated\");\r\n                    props.history.push(\"/person-list\");\r\n                } else Promise.reject();\r\n            })\r\n            .catch((err) => alert(\"Something went wrong\"));\r\n    };\r\n\r\n    // Load data from server and reinitialize person form\r\n    useEffect(() => {\r\n        axios\r\n            .get(\r\n                \"http://localhost:4000/bsg_people/update-person/\"\r\n                + props.match.params.id\r\n            )\r\n            .then((res) => {\r\n                const { fname, lname, homeworld, age } = res.data;\r\n                setFormValues({ fname, lname, homeworld, age });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, [props.match.params.id]);\r\n\r\n    // Return person form\r\n    return (\r\n        <PersonForm\r\n            initialValues={formValues}\r\n            onSubmit={onSubmit}\r\n            enableReinitialize\r\n        >\r\n            Update Person\r\n        </PersonForm>\r\n    );\r\n};\r\n\r\n// Export EditPerson Component\r\nexport default EditPerson;"],"mappings":";;;AAAA;AACA;AAEA;AAEA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC;IACzCQ,IAAI,EAAE,EADmC;IAEzCC,KAAK,EAAE,EAFkC;IAGzCC,MAAM,EAAE;EAHiC,CAAD,CAA5C,CAD0B,CAO1B;;EACA,MAAMC,QAAQ,GAAIC,YAAD,IAAkB;IAC/BV,KAAK,CACAW,GADL,CAEQ,oDACAR,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,EAH3B,EAIQJ,YAJR,EAMKK,IANL,CAMWC,GAAD,IAAS;MACX,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;QACpBC,KAAK,CAAC,6BAAD,CAAL;QACAf,KAAK,CAACgB,OAAN,CAAcC,IAAd,CAAmB,cAAnB;MACH,CAHD,MAGOC,OAAO,CAACC,MAAR;IACV,CAXL,EAYKC,KAZL,CAYYC,GAAD,IAASN,KAAK,CAAC,sBAAD,CAZzB;EAaH,CAdD,CAR0B,CAwB1B;;;EACAnB,SAAS,CAAC,MAAM;IACZC,KAAK,CACAyB,GADL,CAEQ,oDACEtB,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,EAH7B,EAKKC,IALL,CAKWC,GAAD,IAAS;MACX,MAAM;QAAEU,KAAF;QAASC,KAAT;QAAgBC,SAAhB;QAA2BC;MAA3B,IAAmCb,GAAG,CAACc,IAA7C;MACAzB,aAAa,CAAC;QAAEqB,KAAF;QAASC,KAAT;QAAgBC,SAAhB;QAA2BC;MAA3B,CAAD,CAAb;IACH,CARL,EASKN,KATL,CASYC,GAAD,IAASO,OAAO,CAACC,GAAR,CAAYR,GAAZ,CATpB;EAUH,CAXQ,EAWN,CAACrB,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAXM,CAAT,CAzB0B,CAsC1B;;EACA,oBACI,QAAC,UAAD;IACI,aAAa,EAAEV,UADnB;IAEI,QAAQ,EAAEK,QAFd;IAGI,kBAAkB,MAHtB;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CAhDD,C,CAkDA;;;GAlDMP,U;;KAAAA,U;AAmDN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}